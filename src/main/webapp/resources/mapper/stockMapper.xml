<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Stocks">
    <resultMap id="StockResult" type="com.springapp.mvc.Model.Stock">
        <id column="code" jdbcType="CHAR" property="code"/>
        <id column="belong_to" jdbcType="CHAR" property="belongTo"/>
        <result column="name" jdbcType="CHAR" property="name"/>
        <result column="cost" jdbcType="DECIMAL" property="cost"/>
        <result column="share" jdbcType="DECIMAL" property="share"/>
        <result column="current" jdbcType="DECIMAL" property="current"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="rate" jdbcType="DECIMAL" property="rate"/>
        <result column="risk" jdbcType="CHAR" property="risk"/>
        <result column="currency" jdbcType="CHAR" property="currency"/>
        <result column="rmb_cost" jdbcType="DECIMAL" property="rmbCost"/>
    </resultMap>

    <resultMap id="SumResult" type="java.util.HashMap">
        <result column="sum(amount)" jdbcType="DECIMAL" property="sum"/>
    </resultMap>

    <resultMap id="SumByRisk" type="java.util.Map">
        <result column="risk" property="risk" jdbcType="CHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
    </resultMap>

    <resultMap id="SumByBelongTo" type="java.util.Map">
        <result column="belong_to" property="belongTo" jdbcType="CHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
    </resultMap>

    <select id="getStockList" resultMap="StockResult">
        select code, name, belong_to, cost, current, share, risk, rmb_cost from stocks where share > 0 and currency=#{currency} order by belong_to,risk,current*share desc;
    </select>

    <select id="getStockListMap" resultMap="StockResult" parameterType="java.util.Map">
        select code, name, belong_to, cost, current, share, risk, rmb_cost from stocks where share > 0 and currency=#{currency} and code > ${flag} order by belong_to,risk,current*share desc;
    </select>

    <select id="getHistoryStockList" resultMap="StockResult">
        <![CDATA[
          select code, name, belong_to, cost, current, share, risk from stocks where share <= 0 and currency="RMB" order by risk.belong_to;
        ]]>
    </select>

    <select id="getStockByCB" resultMap="StockResult">
        select code, name, belong_to, cost, current, share, risk from stocks where code=#{code} and belong_to=#{belongTo} and currency="RMB";
    </select>

    <insert id="insertStock" parameterType="com.springapp.mvc.Model.Stock">
        insert into stocks(code, name, belong_to, cost, share, risk, currency) values (#{code}, #{name}, #{belongTo}, #{cost},#{share}, #{risk}, #{currency});
    </insert>

    <insert id="updateStock" parameterType="com.springapp.mvc.Model.Stock">
        update stocks set name=#{name}, cost=#{cost}, share=#{share}, risk=#{risk}, rmb_cost=#{rmbCost},current=#{current} where code=#{code} and belong_to=#{belongTo};
    </insert>

    <select id="getSum" resultMap="SumResult">
        select sum(share * current) as amount from stocks where currency=#{currency};
    </select>

    <select id="sumByRisk" resultMap="SumByRisk">
        select risk, sum(current*share) as amount from stocks where currency=#{currency} group by risk;
    </select>

    <select id="sumByBelongTo" resultMap="SumByBelongTo">
        select belong_to, sum(current*share) as amount from stocks where currency=#{currency} group by belong_to;
    </select>

    <insert id="updateCurrent" parameterType="java.util.Map">
        update stocks set current = #{current} where code = #{code};
    </insert>

    <delete id="delete" parameterType="String">
        delete from stocks where code = #{code} and belong_to=#{belongTo};
    </delete>

    <select id="picture" parameterType="java.util.List">
        insert into assets_every_month(code, name, share, net, risk) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.code,jdbcType=CHAR},#{item.name,jdbcType=CHAR},#{item.share,jdbcType=DECIMAL},#{item.current,jdbcType=DECIMAL},#{item.risk,jdbcType=CHAR})
        </foreach>
    </select>

    <select id="updatePicture" parameterType="java.util.Map">
        update assets_every_month set deal_date=#{date}, type=#{type} where type is null;
    </select>

    <select id="getLatestPictureDate" resultType="java.util.Date">
        SELECT deal_date FROM assets_every_month WHERE TYPE=#{type} ORDER BY deal_date DESC LIMIT 1;
    </select>
</mapper>